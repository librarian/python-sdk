"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ServiceError(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    BAD_REQUEST_FIELD_NUMBER: builtins.int
    BAD_RESOURCE_STATE_FIELD_NUMBER: builtins.int
    RESOURCE_NOT_FOUND_FIELD_NUMBER: builtins.int
    RESOURCE_ALREADY_EXISTS_FIELD_NUMBER: builtins.int
    OUT_OF_RANGE_FIELD_NUMBER: builtins.int
    PERMISSION_DENIED_FIELD_NUMBER: builtins.int
    RESOURCE_CONFLICT_FIELD_NUMBER: builtins.int
    OPERATION_ABORTED_FIELD_NUMBER: builtins.int
    TOO_MANY_REQUESTS_FIELD_NUMBER: builtins.int
    QUOTA_FAILURE_FIELD_NUMBER: builtins.int
    NOT_ENOUGH_RESOURCES_FIELD_NUMBER: builtins.int
    INTERNAL_ERROR_FIELD_NUMBER: builtins.int
    service: builtins.str
    """ID of Service which the error originated in. E.g. "dns"."""
    code: builtins.str
    """Detailed error code, service-specific. E.g. "DnsZoneNotEmpty".
    Name of the exception, without Exception suffix if not set.
    Example: for PermissionDeniedException -> code == PermissionDenied.
    """
    @property
    def bad_request(self) -> global___BadRequest: ...
    @property
    def bad_resource_state(self) -> global___BadResourceState: ...
    @property
    def resource_not_found(self) -> global___ResourceNotFound: ...
    @property
    def resource_already_exists(self) -> global___ResourceAlreadyExists: ...
    @property
    def out_of_range(self) -> global___OutOfRange: ...
    @property
    def permission_denied(self) -> global___PermissionDenied: ...
    @property
    def resource_conflict(self) -> global___ResourceConflict: ...
    @property
    def operation_aborted(self) -> global___OperationAborted: ...
    @property
    def too_many_requests(self) -> global___TooManyRequests: ...
    @property
    def quota_failure(self) -> global___QuotaFailure: ...
    @property
    def not_enough_resources(self) -> global___NotEnoughResources: ...
    @property
    def internal_error(self) -> global___InternalError: ...
    def __init__(
        self,
        *,
        service: builtins.str = ...,
        code: builtins.str = ...,
        bad_request: global___BadRequest | None = ...,
        bad_resource_state: global___BadResourceState | None = ...,
        resource_not_found: global___ResourceNotFound | None = ...,
        resource_already_exists: global___ResourceAlreadyExists | None = ...,
        out_of_range: global___OutOfRange | None = ...,
        permission_denied: global___PermissionDenied | None = ...,
        resource_conflict: global___ResourceConflict | None = ...,
        operation_aborted: global___OperationAborted | None = ...,
        too_many_requests: global___TooManyRequests | None = ...,
        quota_failure: global___QuotaFailure | None = ...,
        not_enough_resources: global___NotEnoughResources | None = ...,
        internal_error: global___InternalError | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["bad_request", b"bad_request", "bad_resource_state", b"bad_resource_state", "details", b"details", "internal_error", b"internal_error", "not_enough_resources", b"not_enough_resources", "operation_aborted", b"operation_aborted", "out_of_range", b"out_of_range", "permission_denied", b"permission_denied", "quota_failure", b"quota_failure", "resource_already_exists", b"resource_already_exists", "resource_conflict", b"resource_conflict", "resource_not_found", b"resource_not_found", "too_many_requests", b"too_many_requests"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["bad_request", b"bad_request", "bad_resource_state", b"bad_resource_state", "code", b"code", "details", b"details", "internal_error", b"internal_error", "not_enough_resources", b"not_enough_resources", "operation_aborted", b"operation_aborted", "out_of_range", b"out_of_range", "permission_denied", b"permission_denied", "quota_failure", b"quota_failure", "resource_already_exists", b"resource_already_exists", "resource_conflict", b"resource_conflict", "resource_not_found", b"resource_not_found", "service", b"service", "too_many_requests", b"too_many_requests"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["details", b"details"]) -> typing.Literal["bad_request", "bad_resource_state", "resource_not_found", "resource_already_exists", "out_of_range", "permission_denied", "resource_conflict", "operation_aborted", "too_many_requests", "quota_failure", "not_enough_resources", "internal_error"] | None: ...

global___ServiceError = ServiceError

@typing.final
class BadRequest(google.protobuf.message.Message):
    """The request is invalid."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Violation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        FIELD_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        field: builtins.str
        """What field value is invalid."""
        message: builtins.str
        """Description why the value is invalid, in English."""
        def __init__(
            self,
            *,
            field: builtins.str = ...,
            message: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["field", b"field", "message", b"message"]) -> None: ...

    VIOLATIONS_FIELD_NUMBER: builtins.int
    @property
    def violations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BadRequest.Violation]:
        """Describes all violations."""

    def __init__(
        self,
        *,
        violations: collections.abc.Iterable[global___BadRequest.Violation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["violations", b"violations"]) -> None: ...

global___BadRequest = BadRequest

@typing.final
class BadResourceState(google.protobuf.message.Message):
    """The resource we are trying to use, create, change or delete is in a bad state and cannot be used."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_ID_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    resource_id: builtins.str
    """ID of the resource which is bad."""
    message: builtins.str
    """The reason why this state is bad and cannot be used."""
    def __init__(
        self,
        *,
        resource_id: builtins.str = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["message", b"message", "resource_id", b"resource_id"]) -> None: ...

global___BadResourceState = BadResourceState

@typing.final
class ResourceNotFound(google.protobuf.message.Message):
    """Resource we are trying to interact with does not exist."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: builtins.str
    """ID of the requested resource."""
    def __init__(
        self,
        *,
        resource_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["resource_id", b"resource_id"]) -> None: ...

global___ResourceNotFound = ResourceNotFound

@typing.final
class ResourceAlreadyExists(google.protobuf.message.Message):
    """Resource we are trying to create already exists."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: builtins.str
    """ID of the existing resource."""
    def __init__(
        self,
        *,
        resource_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["resource_id", b"resource_id"]) -> None: ...

global___ResourceAlreadyExists = ResourceAlreadyExists

@typing.final
class ResourceConflict(google.protobuf.message.Message):
    """There is a difference between the actual resource state and the expected one."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_ID_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    resource_id: builtins.str
    """ID of conflicting resource."""
    message: builtins.str
    """Detailed info about conflict."""
    def __init__(
        self,
        *,
        resource_id: builtins.str = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["message", b"message", "resource_id", b"resource_id"]) -> None: ...

global___ResourceConflict = ResourceConflict

@typing.final
class OperationAborted(google.protobuf.message.Message):
    """Operation on the resource has been aborted by a subsequent operation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATION_ID_FIELD_NUMBER: builtins.int
    ABORTED_BY_OPERATION_ID_FIELD_NUMBER: builtins.int
    RESOURCE_ID_FIELD_NUMBER: builtins.int
    operation_id: builtins.str
    """ID of the aborted operation."""
    aborted_by_operation_id: builtins.str
    """ID of the subsequent operation."""
    resource_id: builtins.str
    """Resource ID corresponding to both of the operations."""
    def __init__(
        self,
        *,
        operation_id: builtins.str = ...,
        aborted_by_operation_id: builtins.str = ...,
        resource_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["aborted_by_operation_id", b"aborted_by_operation_id", "operation_id", b"operation_id", "resource_id", b"resource_id"]) -> None: ...

global___OperationAborted = OperationAborted

@typing.final
class OutOfRange(google.protobuf.message.Message):
    """Indicates that element with requested parameters is exceeding the particular range."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTED_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    requested: builtins.str
    """Requested value."""
    limit: builtins.str
    """Available limit."""
    def __init__(
        self,
        *,
        requested: builtins.str = ...,
        limit: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["limit", b"limit", "requested", b"requested"]) -> None: ...

global___OutOfRange = OutOfRange

@typing.final
class PermissionDenied(google.protobuf.message.Message):
    """Indicates that the action cannot be performed because there are insufficient access rights to a resource."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: builtins.str
    """ID of the resource that cannot be accessed."""
    def __init__(
        self,
        *,
        resource_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["resource_id", b"resource_id"]) -> None: ...

global___PermissionDenied = PermissionDenied

@typing.final
class InternalError(google.protobuf.message.Message):
    """Generic internal error."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    TRACE_ID_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    """Error request ID."""
    trace_id: builtins.str
    """Trace ID for the failing request."""
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        trace_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["request_id", b"request_id", "trace_id", b"trace_id"]) -> None: ...

global___InternalError = InternalError

@typing.final
class TooManyRequests(google.protobuf.message.Message):
    """You initiated too many requests to the service at once. Enhance your calm."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VIOLATION_FIELD_NUMBER: builtins.int
    violation: builtins.str
    """What request limit is exceeded (service-dependent)."""
    def __init__(
        self,
        *,
        violation: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["violation", b"violation"]) -> None: ...

global___TooManyRequests = TooManyRequests

@typing.final
class QuotaFailure(google.protobuf.message.Message):
    """Indicates a failure due to exceeding specified limits or allocations in a system or service."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Violation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        QUOTA_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        LIMIT_FIELD_NUMBER: builtins.int
        REQUESTED_FIELD_NUMBER: builtins.int
        quota: builtins.str
        """Which quota check failed."""
        message: builtins.str
        """A description of how the quota check failed."""
        limit: builtins.str
        """Maximum permissible value."""
        requested: builtins.str
        """Requested value."""
        def __init__(
            self,
            *,
            quota: builtins.str = ...,
            message: builtins.str = ...,
            limit: builtins.str = ...,
            requested: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["limit", b"limit", "message", b"message", "quota", b"quota", "requested", b"requested"]) -> None: ...

    VIOLATIONS_FIELD_NUMBER: builtins.int
    @property
    def violations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___QuotaFailure.Violation]:
        """Describes all quota violations."""

    def __init__(
        self,
        *,
        violations: collections.abc.Iterable[global___QuotaFailure.Violation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["violations", b"violations"]) -> None: ...

global___QuotaFailure = QuotaFailure

@typing.final
class NotEnoughResources(google.protobuf.message.Message):
    """Indicates that there are not enough resources available to perform the requested action."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Violation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        RESOURCE_TYPE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        REQUESTED_FIELD_NUMBER: builtins.int
        resource_type: builtins.str
        """The type of resource that is insufficient.
        This field is populated when it is possible to determine the lacking resource type.
        **Not for programmatic use.**
        """
        message: builtins.str
        """A description of how the resource is insufficient."""
        requested: builtins.str
        """Requested value."""
        def __init__(
            self,
            *,
            resource_type: builtins.str = ...,
            message: builtins.str = ...,
            requested: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["message", b"message", "requested", b"requested", "resource_type", b"resource_type"]) -> None: ...

    VIOLATIONS_FIELD_NUMBER: builtins.int
    @property
    def violations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NotEnoughResources.Violation]:
        """Describes all resource violations."""

    def __init__(
        self,
        *,
        violations: collections.abc.Iterable[global___NotEnoughResources.Violation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["violations", b"violations"]) -> None: ...

global___NotEnoughResources = NotEnoughResources
