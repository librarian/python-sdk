"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import nebius.common.v1.metadata_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Disk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> nebius.common.v1.metadata_pb2.ResourceMetadata: ...
    @property
    def spec(self) -> global___DiskSpec: ...
    @property
    def status(self) -> global___DiskStatus: ...
    def __init__(
        self,
        *,
        metadata: nebius.common.v1.metadata_pb2.ResourceMetadata | None = ...,
        spec: global___DiskSpec | None = ...,
        status: global___DiskStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> None: ...

global___Disk = Disk

@typing.final
class DiskSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _DiskType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _DiskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DiskSpec._DiskType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNSPECIFIED: DiskSpec._DiskType.ValueType  # 0
        NETWORK_SSD: DiskSpec._DiskType.ValueType  # 1
        NETWORK_HDD: DiskSpec._DiskType.ValueType  # 2
        NETWORK_SSD_NON_REPLICATED: DiskSpec._DiskType.ValueType  # 3
        NETWORK_SSD_IO_M3: DiskSpec._DiskType.ValueType  # 4

    class DiskType(_DiskType, metaclass=_DiskTypeEnumTypeWrapper):
        """the list of available types will be clarified later, it is not final version"""

    UNSPECIFIED: DiskSpec.DiskType.ValueType  # 0
    NETWORK_SSD: DiskSpec.DiskType.ValueType  # 1
    NETWORK_HDD: DiskSpec.DiskType.ValueType  # 2
    NETWORK_SSD_NON_REPLICATED: DiskSpec.DiskType.ValueType  # 3
    NETWORK_SSD_IO_M3: DiskSpec.DiskType.ValueType  # 4

    SIZE_BYTES_FIELD_NUMBER: builtins.int
    SIZE_KIBIBYTES_FIELD_NUMBER: builtins.int
    SIZE_MEBIBYTES_FIELD_NUMBER: builtins.int
    SIZE_GIBIBYTES_FIELD_NUMBER: builtins.int
    BLOCK_SIZE_BYTES_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_ID_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_FAMILY_FIELD_NUMBER: builtins.int
    size_bytes: builtins.int
    size_kibibytes: builtins.int
    size_mebibytes: builtins.int
    size_gibibytes: builtins.int
    block_size_bytes: builtins.int
    type: global___DiskSpec.DiskType.ValueType
    source_image_id: builtins.str
    @property
    def placement_policy(self) -> global___DiskPlacementPolicy: ...
    @property
    def source_image_family(self) -> global___SourceImageFamily: ...
    def __init__(
        self,
        *,
        size_bytes: builtins.int = ...,
        size_kibibytes: builtins.int = ...,
        size_mebibytes: builtins.int = ...,
        size_gibibytes: builtins.int = ...,
        block_size_bytes: builtins.int = ...,
        type: global___DiskSpec.DiskType.ValueType = ...,
        placement_policy: global___DiskPlacementPolicy | None = ...,
        source_image_id: builtins.str = ...,
        source_image_family: global___SourceImageFamily | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["placement_policy", b"placement_policy", "size", b"size", "size_bytes", b"size_bytes", "size_gibibytes", b"size_gibibytes", "size_kibibytes", b"size_kibibytes", "size_mebibytes", b"size_mebibytes", "source", b"source", "source_image_family", b"source_image_family", "source_image_id", b"source_image_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["block_size_bytes", b"block_size_bytes", "placement_policy", b"placement_policy", "size", b"size", "size_bytes", b"size_bytes", "size_gibibytes", b"size_gibibytes", "size_kibibytes", b"size_kibibytes", "size_mebibytes", b"size_mebibytes", "source", b"source", "source_image_family", b"source_image_family", "source_image_id", b"source_image_id", "type", b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["size", b"size"]) -> typing.Literal["size_bytes", "size_kibibytes", "size_mebibytes", "size_gibibytes"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["source", b"source"]) -> typing.Literal["source_image_id", "source_image_family"] | None: ...

global___DiskSpec = DiskSpec

@typing.final
class SourceImageFamily(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_FAMILY_FIELD_NUMBER: builtins.int
    PARENT_ID_FIELD_NUMBER: builtins.int
    image_family: builtins.str
    parent_id: builtins.str
    def __init__(
        self,
        *,
        image_family: builtins.str = ...,
        parent_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["image_family", b"image_family", "parent_id", b"parent_id"]) -> None: ...

global___SourceImageFamily = SourceImageFamily

@typing.final
class DiskPlacementPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLACEMENT_GROUP_ID_FIELD_NUMBER: builtins.int
    PLACEMENT_GROUP_PARTITION_FIELD_NUMBER: builtins.int
    placement_group_id: builtins.str
    placement_group_partition: builtins.int
    def __init__(
        self,
        *,
        placement_group_id: builtins.str = ...,
        placement_group_partition: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["placement_group_id", b"placement_group_id", "placement_group_partition", b"placement_group_partition"]) -> None: ...

global___DiskPlacementPolicy = DiskPlacementPolicy

@typing.final
class DiskStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DiskStatus._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNSPECIFIED: DiskStatus._State.ValueType  # 0
        CREATING: DiskStatus._State.ValueType  # 1
        READY: DiskStatus._State.ValueType  # 2
        UPDATING: DiskStatus._State.ValueType  # 3
        DELETING: DiskStatus._State.ValueType  # 4
        ERROR: DiskStatus._State.ValueType  # 5

    class State(_State, metaclass=_StateEnumTypeWrapper): ...
    UNSPECIFIED: DiskStatus.State.ValueType  # 0
    CREATING: DiskStatus.State.ValueType  # 1
    READY: DiskStatus.State.ValueType  # 2
    UPDATING: DiskStatus.State.ValueType  # 3
    DELETING: DiskStatus.State.ValueType  # 4
    ERROR: DiskStatus.State.ValueType  # 5

    STATE_FIELD_NUMBER: builtins.int
    STATE_DESCRIPTION_FIELD_NUMBER: builtins.int
    READ_WRITE_ATTACHMENT_FIELD_NUMBER: builtins.int
    READ_ONLY_ATTACHMENTS_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_ID_FIELD_NUMBER: builtins.int
    SIZE_BYTES_FIELD_NUMBER: builtins.int
    RECONCILING_FIELD_NUMBER: builtins.int
    state: global___DiskStatus.State.ValueType
    state_description: builtins.str
    read_write_attachment: builtins.str
    source_image_id: builtins.str
    size_bytes: builtins.int
    reconciling: builtins.bool
    """Indicates whether there is an ongoing operation"""
    @property
    def read_only_attachments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        state: global___DiskStatus.State.ValueType = ...,
        state_description: builtins.str = ...,
        read_write_attachment: builtins.str = ...,
        read_only_attachments: collections.abc.Iterable[builtins.str] | None = ...,
        source_image_id: builtins.str = ...,
        size_bytes: builtins.int = ...,
        reconciling: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["read_only_attachments", b"read_only_attachments", "read_write_attachment", b"read_write_attachment", "reconciling", b"reconciling", "size_bytes", b"size_bytes", "source_image_id", b"source_image_id", "state", b"state", "state_description", b"state_description"]) -> None: ...

global___DiskStatus = DiskStatus
