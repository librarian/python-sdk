"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import nebius.common.v1.metadata_pb2
import nebius.compute.v1.network_interface_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _InstanceRecoveryPolicy:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _InstanceRecoveryPolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstanceRecoveryPolicy.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RECOVER: _InstanceRecoveryPolicy.ValueType  # 0
    FAIL: _InstanceRecoveryPolicy.ValueType  # 1

class InstanceRecoveryPolicy(_InstanceRecoveryPolicy, metaclass=_InstanceRecoveryPolicyEnumTypeWrapper): ...

RECOVER: InstanceRecoveryPolicy.ValueType  # 0
FAIL: InstanceRecoveryPolicy.ValueType  # 1
global___InstanceRecoveryPolicy = InstanceRecoveryPolicy

@typing.final
class Instance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> nebius.common.v1.metadata_pb2.ResourceMetadata: ...
    @property
    def spec(self) -> global___InstanceSpec: ...
    @property
    def status(self) -> global___InstanceStatus: ...
    def __init__(
        self,
        *,
        metadata: nebius.common.v1.metadata_pb2.ResourceMetadata | None = ...,
        spec: global___InstanceSpec | None = ...,
        status: global___InstanceStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> None: ...

global___Instance = Instance

@typing.final
class InstanceSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    GPU_CLUSTER_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACES_FIELD_NUMBER: builtins.int
    BOOT_DISK_FIELD_NUMBER: builtins.int
    SECONDARY_DISKS_FIELD_NUMBER: builtins.int
    FILESYSTEMS_FIELD_NUMBER: builtins.int
    CLOUD_INIT_USER_DATA_FIELD_NUMBER: builtins.int
    STOPPED_FIELD_NUMBER: builtins.int
    RECOVERY_POLICY_FIELD_NUMBER: builtins.int
    service_account_id: builtins.str
    cloud_init_user_data: builtins.str
    stopped: builtins.bool
    recovery_policy: global___InstanceRecoveryPolicy.ValueType
    @property
    def resources(self) -> global___ResourcesSpec: ...
    @property
    def gpu_cluster(self) -> global___InstanceGpuClusterSpec: ...
    @property
    def network_interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[nebius.compute.v1.network_interface_pb2.NetworkInterfaceSpec]: ...
    @property
    def boot_disk(self) -> global___AttachedDiskSpec: ...
    @property
    def secondary_disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedDiskSpec]: ...
    @property
    def filesystems(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedFilesystemSpec]: ...
    def __init__(
        self,
        *,
        service_account_id: builtins.str = ...,
        resources: global___ResourcesSpec | None = ...,
        gpu_cluster: global___InstanceGpuClusterSpec | None = ...,
        network_interfaces: collections.abc.Iterable[nebius.compute.v1.network_interface_pb2.NetworkInterfaceSpec] | None = ...,
        boot_disk: global___AttachedDiskSpec | None = ...,
        secondary_disks: collections.abc.Iterable[global___AttachedDiskSpec] | None = ...,
        filesystems: collections.abc.Iterable[global___AttachedFilesystemSpec] | None = ...,
        cloud_init_user_data: builtins.str = ...,
        stopped: builtins.bool = ...,
        recovery_policy: global___InstanceRecoveryPolicy.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["boot_disk", b"boot_disk", "gpu_cluster", b"gpu_cluster", "resources", b"resources"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["boot_disk", b"boot_disk", "cloud_init_user_data", b"cloud_init_user_data", "filesystems", b"filesystems", "gpu_cluster", b"gpu_cluster", "network_interfaces", b"network_interfaces", "recovery_policy", b"recovery_policy", "resources", b"resources", "secondary_disks", b"secondary_disks", "service_account_id", b"service_account_id", "stopped", b"stopped"]) -> None: ...

global___InstanceSpec = InstanceSpec

@typing.final
class ResourcesSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLATFORM_FIELD_NUMBER: builtins.int
    PRESET_FIELD_NUMBER: builtins.int
    platform: builtins.str
    preset: builtins.str
    def __init__(
        self,
        *,
        platform: builtins.str = ...,
        preset: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["preset", b"preset", "size", b"size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["platform", b"platform", "preset", b"preset", "size", b"size"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["size", b"size"]) -> typing.Literal["preset"] | None: ...

global___ResourcesSpec = ResourcesSpec

@typing.final
class InstanceGpuClusterSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___InstanceGpuClusterSpec = InstanceGpuClusterSpec

@typing.final
class AttachedDiskSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _AttachMode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _AttachModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AttachedDiskSpec._AttachMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNSPECIFIED: AttachedDiskSpec._AttachMode.ValueType  # 0
        READ_ONLY: AttachedDiskSpec._AttachMode.ValueType  # 1
        READ_WRITE: AttachedDiskSpec._AttachMode.ValueType  # 2

    class AttachMode(_AttachMode, metaclass=_AttachModeEnumTypeWrapper): ...
    UNSPECIFIED: AttachedDiskSpec.AttachMode.ValueType  # 0
    READ_ONLY: AttachedDiskSpec.AttachMode.ValueType  # 1
    READ_WRITE: AttachedDiskSpec.AttachMode.ValueType  # 2

    ATTACH_MODE_FIELD_NUMBER: builtins.int
    EXISTING_DISK_FIELD_NUMBER: builtins.int
    DEVICE_ID_FIELD_NUMBER: builtins.int
    attach_mode: global___AttachedDiskSpec.AttachMode.ValueType
    device_id: builtins.str
    """Specifies the user-defined identifier, allowing to use '/dev/disk/by-id/virtio-{device_id}' as a device path in mount command."""
    @property
    def existing_disk(self) -> global___ExistingDisk: ...
    def __init__(
        self,
        *,
        attach_mode: global___AttachedDiskSpec.AttachMode.ValueType = ...,
        existing_disk: global___ExistingDisk | None = ...,
        device_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["existing_disk", b"existing_disk", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attach_mode", b"attach_mode", "device_id", b"device_id", "existing_disk", b"existing_disk", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["type", b"type"]) -> typing.Literal["existing_disk"] | None: ...

global___AttachedDiskSpec = AttachedDiskSpec

@typing.final
class ExistingDisk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___ExistingDisk = ExistingDisk

@typing.final
class ExistingFilesystem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___ExistingFilesystem = ExistingFilesystem

@typing.final
class AttachedFilesystemSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _AttachMode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _AttachModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AttachedFilesystemSpec._AttachMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNSPECIFIED: AttachedFilesystemSpec._AttachMode.ValueType  # 0
        READ_ONLY: AttachedFilesystemSpec._AttachMode.ValueType  # 1
        READ_WRITE: AttachedFilesystemSpec._AttachMode.ValueType  # 2

    class AttachMode(_AttachMode, metaclass=_AttachModeEnumTypeWrapper): ...
    UNSPECIFIED: AttachedFilesystemSpec.AttachMode.ValueType  # 0
    READ_ONLY: AttachedFilesystemSpec.AttachMode.ValueType  # 1
    READ_WRITE: AttachedFilesystemSpec.AttachMode.ValueType  # 2

    ATTACH_MODE_FIELD_NUMBER: builtins.int
    MOUNT_TAG_FIELD_NUMBER: builtins.int
    EXISTING_FILESYSTEM_FIELD_NUMBER: builtins.int
    attach_mode: global___AttachedFilesystemSpec.AttachMode.ValueType
    mount_tag: builtins.str
    """Specifies the user-defined identifier, allowing to use it as a device in mount command."""
    @property
    def existing_filesystem(self) -> global___ExistingFilesystem: ...
    def __init__(
        self,
        *,
        attach_mode: global___AttachedFilesystemSpec.AttachMode.ValueType = ...,
        mount_tag: builtins.str = ...,
        existing_filesystem: global___ExistingFilesystem | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["existing_filesystem", b"existing_filesystem", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attach_mode", b"attach_mode", "existing_filesystem", b"existing_filesystem", "mount_tag", b"mount_tag", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["type", b"type"]) -> typing.Literal["existing_filesystem"] | None: ...

global___AttachedFilesystemSpec = AttachedFilesystemSpec

@typing.final
class InstanceStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _InstanceState:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _InstanceStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[InstanceStatus._InstanceState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNSPECIFIED: InstanceStatus._InstanceState.ValueType  # 0
        CREATING: InstanceStatus._InstanceState.ValueType  # 1
        UPDATING: InstanceStatus._InstanceState.ValueType  # 2
        STARTING: InstanceStatus._InstanceState.ValueType  # 3
        RUNNING: InstanceStatus._InstanceState.ValueType  # 4
        STOPPING: InstanceStatus._InstanceState.ValueType  # 5
        STOPPED: InstanceStatus._InstanceState.ValueType  # 6
        DELETING: InstanceStatus._InstanceState.ValueType  # 7
        ERROR: InstanceStatus._InstanceState.ValueType  # 8

    class InstanceState(_InstanceState, metaclass=_InstanceStateEnumTypeWrapper): ...
    UNSPECIFIED: InstanceStatus.InstanceState.ValueType  # 0
    CREATING: InstanceStatus.InstanceState.ValueType  # 1
    UPDATING: InstanceStatus.InstanceState.ValueType  # 2
    STARTING: InstanceStatus.InstanceState.ValueType  # 3
    RUNNING: InstanceStatus.InstanceState.ValueType  # 4
    STOPPING: InstanceStatus.InstanceState.ValueType  # 5
    STOPPED: InstanceStatus.InstanceState.ValueType  # 6
    DELETING: InstanceStatus.InstanceState.ValueType  # 7
    ERROR: InstanceStatus.InstanceState.ValueType  # 8

    STATE_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACES_FIELD_NUMBER: builtins.int
    RECONCILING_FIELD_NUMBER: builtins.int
    state: global___InstanceStatus.InstanceState.ValueType
    reconciling: builtins.bool
    """Indicates whether there is an ongoing operation"""
    @property
    def network_interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[nebius.compute.v1.network_interface_pb2.NetworkInterfaceStatus]: ...
    def __init__(
        self,
        *,
        state: global___InstanceStatus.InstanceState.ValueType = ...,
        network_interfaces: collections.abc.Iterable[nebius.compute.v1.network_interface_pb2.NetworkInterfaceStatus] | None = ...,
        reconciling: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["network_interfaces", b"network_interfaces", "reconciling", b"reconciling", "state", b"state"]) -> None: ...

global___InstanceStatus = InstanceStatus
