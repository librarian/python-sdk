"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import nebius.common.v1.metadata_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AddressBlockState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AddressBlockStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AddressBlockState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STATE_UNSPECIFIED: _AddressBlockState.ValueType  # 0
    """Default, unspecified state."""
    AVAILABLE: _AddressBlockState.ValueType  # 1
    """Allocation from range is available."""
    DISABLED: _AddressBlockState.ValueType  # 2
    """New allocation would not be created."""

class AddressBlockState(_AddressBlockState, metaclass=_AddressBlockStateEnumTypeWrapper): ...

STATE_UNSPECIFIED: AddressBlockState.ValueType  # 0
"""Default, unspecified state."""
AVAILABLE: AddressBlockState.ValueType  # 1
"""Allocation from range is available."""
DISABLED: AddressBlockState.ValueType  # 2
"""New allocation would not be created."""
global___AddressBlockState = AddressBlockState

class _IpVersion:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _IpVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IpVersion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    IP_VERSION_UNSPECIFIED: _IpVersion.ValueType  # 0
    """Default, unspecified IP version."""
    IPV4: _IpVersion.ValueType  # 1
    """IPv4 address."""
    IPV6: _IpVersion.ValueType  # 2
    """IPv6 address."""

class IpVersion(_IpVersion, metaclass=_IpVersionEnumTypeWrapper): ...

IP_VERSION_UNSPECIFIED: IpVersion.ValueType  # 0
"""Default, unspecified IP version."""
IPV4: IpVersion.ValueType  # 1
"""IPv4 address."""
IPV6: IpVersion.ValueType  # 2
"""IPv6 address."""
global___IpVersion = IpVersion

class _IpVisibility:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _IpVisibilityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IpVisibility.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    IP_VISIBILITY_UNSPECIFIED: _IpVisibility.ValueType  # 0
    """Default, unspecified IP visibility."""
    PRIVATE: _IpVisibility.ValueType  # 1
    """Private address."""
    PUBLIC: _IpVisibility.ValueType  # 2
    """Public address."""

class IpVisibility(_IpVisibility, metaclass=_IpVisibilityEnumTypeWrapper): ...

IP_VISIBILITY_UNSPECIFIED: IpVisibility.ValueType  # 0
"""Default, unspecified IP visibility."""
PRIVATE: IpVisibility.ValueType  # 1
"""Private address."""
PUBLIC: IpVisibility.ValueType  # 2
"""Public address."""
global___IpVisibility = IpVisibility

@typing.final
class Pool(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> nebius.common.v1.metadata_pb2.ResourceMetadata:
        """Metadata associated with the Pool.
        `metadata.parent_id` represents the Project.
        """

    @property
    def spec(self) -> global___PoolSpec:
        """Specification of the Pool."""

    @property
    def status(self) -> global___PoolStatus:
        """Status information for the Pool."""

    def __init__(
        self,
        *,
        metadata: nebius.common.v1.metadata_pb2.ResourceMetadata | None = ...,
        spec: global___PoolSpec | None = ...,
        status: global___PoolStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> None: ...

global___Pool = Pool

@typing.final
class PoolSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_POOL_ID_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    VISIBILITY_FIELD_NUMBER: builtins.int
    CIDRS_FIELD_NUMBER: builtins.int
    source_pool_id: builtins.str
    """ID of source pool. Current pool will be created with the same scope.
    Pool is a root-pool if this field is empty
    """
    version: global___IpVersion.ValueType
    """IP version for the Pool."""
    visibility: global___IpVisibility.ValueType
    @property
    def cidrs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PoolCidr]:
        """CIDR blocks."""

    def __init__(
        self,
        *,
        source_pool_id: builtins.str = ...,
        version: global___IpVersion.ValueType = ...,
        visibility: global___IpVisibility.ValueType = ...,
        cidrs: collections.abc.Iterable[global___PoolCidr] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cidrs", b"cidrs", "source_pool_id", b"source_pool_id", "version", b"version", "visibility", b"visibility"]) -> None: ...

global___PoolSpec = PoolSpec

@typing.final
class PoolCidr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CIDR_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    MAX_MASK_LENGTH_FIELD_NUMBER: builtins.int
    cidr: builtins.str
    """CIDR block.
    May be a prefix length (such as /24) for non-top-level pools
    or a CIDR-formatted string (such as 10.1.2.0/24).
    """
    state: global___AddressBlockState.ValueType
    """State of the Cidr.
    Default state is AVAILABLE
    """
    max_mask_length: builtins.int
    """Maximum mask length for allocation from this cidr including creation of sub-pools
    Default max_mask_length is 32 for IPv4 and 128 for IPv6
    """
    def __init__(
        self,
        *,
        cidr: builtins.str = ...,
        state: global___AddressBlockState.ValueType = ...,
        max_mask_length: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cidr", b"cidr", "max_mask_length", b"max_mask_length", "state", b"state"]) -> None: ...

global___PoolCidr = PoolCidr

@typing.final
class PoolStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PoolStatus._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNSPECIFIED: PoolStatus._State.ValueType  # 0
        """Default, unspecified state."""
        CREATING: PoolStatus._State.ValueType  # 1
        """Pool is being created."""
        READY: PoolStatus._State.ValueType  # 2
        """Pool is ready for use."""
        DELETING: PoolStatus._State.ValueType  # 3
        """Pool is being deleted."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Possible states of the Pool."""

    STATE_UNSPECIFIED: PoolStatus.State.ValueType  # 0
    """Default, unspecified state."""
    CREATING: PoolStatus.State.ValueType  # 1
    """Pool is being created."""
    READY: PoolStatus.State.ValueType  # 2
    """Pool is ready for use."""
    DELETING: PoolStatus.State.ValueType  # 3
    """Pool is being deleted."""

    STATE_FIELD_NUMBER: builtins.int
    CIDRS_FIELD_NUMBER: builtins.int
    SCOPE_ID_FIELD_NUMBER: builtins.int
    state: global___PoolStatus.State.ValueType
    """Current state of the Pool."""
    scope_id: builtins.str
    """Scope is the unique identifier for single pool tree."""
    @property
    def cidrs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """CIDR blocks."""

    def __init__(
        self,
        *,
        state: global___PoolStatus.State.ValueType = ...,
        cidrs: collections.abc.Iterable[builtins.str] | None = ...,
        scope_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cidrs", b"cidrs", "scope_id", b"scope_id", "state", b"state"]) -> None: ...

global___PoolStatus = PoolStatus
