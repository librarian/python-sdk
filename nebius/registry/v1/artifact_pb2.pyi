"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Artifact(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Status:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Artifact._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNSPECIFIED: Artifact._Status.ValueType  # 0
        ACTIVE: Artifact._Status.ValueType  # 1
        DELETING: Artifact._Status.ValueType  # 2

    class Status(_Status, metaclass=_StatusEnumTypeWrapper): ...
    STATUS_UNSPECIFIED: Artifact.Status.ValueType  # 0
    ACTIVE: Artifact.Status.ValueType  # 1
    DELETING: Artifact.Status.ValueType  # 2

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Artifact._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        BLOB: Artifact._Type.ValueType  # 0
        MANIFEST: Artifact._Type.ValueType  # 1
        DEB_PACKAGE: Artifact._Type.ValueType  # 2
        MANIFEST_LIST: Artifact._Type.ValueType  # 3
        RELEASE_INDEX: Artifact._Type.ValueType  # 4
        PACKAGE_INDEX: Artifact._Type.ValueType  # 5
        GZIPPED_PACKAGE_INDEX: Artifact._Type.ValueType  # 6

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    BLOB: Artifact.Type.ValueType  # 0
    MANIFEST: Artifact.Type.ValueType  # 1
    DEB_PACKAGE: Artifact.Type.ValueType  # 2
    MANIFEST_LIST: Artifact.Type.ValueType  # 3
    RELEASE_INDEX: Artifact.Type.ValueType  # 4
    PACKAGE_INDEX: Artifact.Type.ValueType  # 5
    GZIPPED_PACKAGE_INDEX: Artifact.Type.ValueType  # 6

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MEDIA_TYPE_FIELD_NUMBER: builtins.int
    DIGEST_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    media_type: builtins.str
    digest: builtins.str
    size: builtins.int
    status: global___Artifact.Status.ValueType
    type: global___Artifact.Type.ValueType
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        media_type: builtins.str = ...,
        digest: builtins.str = ...,
        size: builtins.int = ...,
        status: global___Artifact.Status.ValueType = ...,
        type: global___Artifact.Type.ValueType = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "updated_at", b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["created_at", b"created_at", "digest", b"digest", "id", b"id", "media_type", b"media_type", "name", b"name", "size", b"size", "status", b"status", "type", b"type", "updated_at", b"updated_at"]) -> None: ...

global___Artifact = Artifact
