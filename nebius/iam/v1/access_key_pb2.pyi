"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import nebius.common.v1.metadata_pb2
import nebius.iam.v1.access_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AccessKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> nebius.common.v1.metadata_pb2.ResourceMetadata: ...
    @property
    def spec(self) -> global___AccessKeySpec: ...
    @property
    def status(self) -> global___AccessKeyStatus: ...
    def __init__(
        self,
        *,
        metadata: nebius.common.v1.metadata_pb2.ResourceMetadata | None = ...,
        spec: global___AccessKeySpec | None = ...,
        status: global___AccessKeyStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> None: ...

global___AccessKey = AccessKey

@typing.final
class AccessKeySpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    description: builtins.str
    @property
    def account(self) -> nebius.iam.v1.access_pb2.Account: ...
    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        account: nebius.iam.v1.access_pb2.Account | None = ...,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["account", b"account", "expires_at", b"expires_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account", b"account", "description", b"description", "expires_at", b"expires_at"]) -> None: ...

global___AccessKeySpec = AccessKeySpec

@typing.final
class AccessKeyStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AccessKeyStatus._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNSPECIFIED: AccessKeyStatus._State.ValueType  # 0
        ACTIVE: AccessKeyStatus._State.ValueType  # 1
        INACTIVE: AccessKeyStatus._State.ValueType  # 2
        EXPIRED: AccessKeyStatus._State.ValueType  # 3
        DELETING: AccessKeyStatus._State.ValueType  # 4
        DELETED: AccessKeyStatus._State.ValueType  # 5

    class State(_State, metaclass=_StateEnumTypeWrapper): ...
    STATE_UNSPECIFIED: AccessKeyStatus.State.ValueType  # 0
    ACTIVE: AccessKeyStatus.State.ValueType  # 1
    INACTIVE: AccessKeyStatus.State.ValueType  # 2
    EXPIRED: AccessKeyStatus.State.ValueType  # 3
    DELETING: AccessKeyStatus.State.ValueType  # 4
    DELETED: AccessKeyStatus.State.ValueType  # 5

    STATE_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    KEY_SIZE_FIELD_NUMBER: builtins.int
    AWS_ACCESS_KEY_ID_FIELD_NUMBER: builtins.int
    SECRET_FIELD_NUMBER: builtins.int
    state: global___AccessKeyStatus.State.ValueType
    fingerprint: builtins.str
    algorithm: builtins.str
    key_size: builtins.int
    aws_access_key_id: builtins.str
    secret: builtins.str
    def __init__(
        self,
        *,
        state: global___AccessKeyStatus.State.ValueType = ...,
        fingerprint: builtins.str = ...,
        algorithm: builtins.str = ...,
        key_size: builtins.int = ...,
        aws_access_key_id: builtins.str = ...,
        secret: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["algorithm", b"algorithm", "aws_access_key_id", b"aws_access_key_id", "fingerprint", b"fingerprint", "key_size", b"key_size", "secret", b"secret", "state", b"state"]) -> None: ...

global___AccessKeyStatus = AccessKeyStatus
