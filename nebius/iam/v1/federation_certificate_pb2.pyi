"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import nebius.common.v1.metadata_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class FederationCertificate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> nebius.common.v1.metadata_pb2.ResourceMetadata: ...
    @property
    def spec(self) -> global___FederationCertificateSpec: ...
    @property
    def status(self) -> global___FederationCertificateStatus: ...
    def __init__(
        self,
        *,
        metadata: nebius.common.v1.metadata_pb2.ResourceMetadata | None = ...,
        spec: global___FederationCertificateSpec | None = ...,
        status: global___FederationCertificateStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> None: ...

global___FederationCertificate = FederationCertificate

@typing.final
class FederationCertificateSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    description: builtins.str
    data: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        data: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "description", b"description"]) -> None: ...

global___FederationCertificateSpec = FederationCertificateSpec

@typing.final
class FederationCertificateStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[FederationCertificateStatus._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNSPECIFIED: FederationCertificateStatus._State.ValueType  # 0
        ACTIVE: FederationCertificateStatus._State.ValueType  # 1
        EXPIRED: FederationCertificateStatus._State.ValueType  # 2

    class State(_State, metaclass=_StateEnumTypeWrapper): ...
    STATE_UNSPECIFIED: FederationCertificateStatus.State.ValueType  # 0
    ACTIVE: FederationCertificateStatus.State.ValueType  # 1
    EXPIRED: FederationCertificateStatus.State.ValueType  # 2

    STATE_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    KEY_SIZE_FIELD_NUMBER: builtins.int
    NOT_BEFORE_FIELD_NUMBER: builtins.int
    NOT_AFTER_FIELD_NUMBER: builtins.int
    state: global___FederationCertificateStatus.State.ValueType
    algorithm: builtins.str
    key_size: builtins.int
    @property
    def not_before(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def not_after(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        state: global___FederationCertificateStatus.State.ValueType = ...,
        algorithm: builtins.str = ...,
        key_size: builtins.int = ...,
        not_before: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        not_after: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["not_after", b"not_after", "not_before", b"not_before"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["algorithm", b"algorithm", "key_size", b"key_size", "not_after", b"not_after", "not_before", b"not_before", "state", b"state"]) -> None: ...

global___FederationCertificateStatus = FederationCertificateStatus
