"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class DiskSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _DiskType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _DiskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DiskSpec._DiskType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNSPECIFIED: DiskSpec._DiskType.ValueType  # 0
        NETWORK_SSD: DiskSpec._DiskType.ValueType  # 1
        """the list of available types will be clarified later, it is not final version"""
        NETWORK_HDD: DiskSpec._DiskType.ValueType  # 2
        NETWORK_SSD_IO_M3: DiskSpec._DiskType.ValueType  # 3

    class DiskType(_DiskType, metaclass=_DiskTypeEnumTypeWrapper): ...
    UNSPECIFIED: DiskSpec.DiskType.ValueType  # 0
    NETWORK_SSD: DiskSpec.DiskType.ValueType  # 1
    """the list of available types will be clarified later, it is not final version"""
    NETWORK_HDD: DiskSpec.DiskType.ValueType  # 2
    NETWORK_SSD_IO_M3: DiskSpec.DiskType.ValueType  # 3

    SIZE_BYTES_FIELD_NUMBER: builtins.int
    SIZE_KIBIBYTES_FIELD_NUMBER: builtins.int
    SIZE_MEBIBYTES_FIELD_NUMBER: builtins.int
    SIZE_GIBIBYTES_FIELD_NUMBER: builtins.int
    BLOCK_SIZE_BYTES_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    size_bytes: builtins.int
    size_kibibytes: builtins.int
    size_mebibytes: builtins.int
    size_gibibytes: builtins.int
    block_size_bytes: builtins.int
    type: global___DiskSpec.DiskType.ValueType
    def __init__(
        self,
        *,
        size_bytes: builtins.int = ...,
        size_kibibytes: builtins.int = ...,
        size_mebibytes: builtins.int = ...,
        size_gibibytes: builtins.int = ...,
        block_size_bytes: builtins.int = ...,
        type: global___DiskSpec.DiskType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["size", b"size", "size_bytes", b"size_bytes", "size_gibibytes", b"size_gibibytes", "size_kibibytes", b"size_kibibytes", "size_mebibytes", b"size_mebibytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["block_size_bytes", b"block_size_bytes", "size", b"size", "size_bytes", b"size_bytes", "size_gibibytes", b"size_gibibytes", "size_kibibytes", b"size_kibibytes", "size_mebibytes", b"size_mebibytes", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["size", b"size"]) -> typing.Literal["size_bytes", "size_kibibytes", "size_mebibytes", "size_gibibytes"] | None: ...

global___DiskSpec = DiskSpec

@typing.final
class ResourcesSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLATFORM_FIELD_NUMBER: builtins.int
    PRESET_FIELD_NUMBER: builtins.int
    platform: builtins.str
    preset: builtins.str
    def __init__(
        self,
        *,
        platform: builtins.str = ...,
        preset: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["preset", b"preset", "size", b"size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["platform", b"platform", "preset", b"preset", "size", b"size"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["size", b"size"]) -> typing.Literal["preset"] | None: ...

global___ResourcesSpec = ResourcesSpec
