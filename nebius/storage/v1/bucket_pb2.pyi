"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import nebius.common.v1.metadata_pb2
import nebius.storage.v1.base_pb2
import nebius.storage.v1.bucket_counters_pb2
import nebius.storage.v1.lifecycle_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Bucket(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> nebius.common.v1.metadata_pb2.ResourceMetadata: ...
    @property
    def spec(self) -> global___BucketSpec: ...
    @property
    def status(self) -> global___BucketStatus: ...
    def __init__(
        self,
        *,
        metadata: nebius.common.v1.metadata_pb2.ResourceMetadata | None = ...,
        spec: global___BucketSpec | None = ...,
        status: global___BucketStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "spec", b"spec", "status", b"status"]) -> None: ...

global___Bucket = Bucket

@typing.final
class BucketSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSIONING_POLICY_FIELD_NUMBER: builtins.int
    MAX_SIZE_BYTES_FIELD_NUMBER: builtins.int
    LIFECYCLE_CONFIGURATION_FIELD_NUMBER: builtins.int
    versioning_policy: nebius.storage.v1.base_pb2.VersioningPolicy.ValueType
    """Supports transitions:
     * disabled -> enabled
     * disabled -> suspended
     * enabled <-> suspended
    """
    max_size_bytes: builtins.int
    """Maximum bucket size.
    Zero means unlimited.
    Actual limit can be lower if customer doesn't have enough quota.
    Real bucket size can go a little higher if customer writes too fast.
    """
    @property
    def lifecycle_configuration(self) -> nebius.storage.v1.lifecycle_pb2.LifecycleConfiguration: ...
    def __init__(
        self,
        *,
        versioning_policy: nebius.storage.v1.base_pb2.VersioningPolicy.ValueType = ...,
        max_size_bytes: builtins.int = ...,
        lifecycle_configuration: nebius.storage.v1.lifecycle_pb2.LifecycleConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["lifecycle_configuration", b"lifecycle_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["lifecycle_configuration", b"lifecycle_configuration", "max_size_bytes", b"max_size_bytes", "versioning_policy", b"versioning_policy"]) -> None: ...

global___BucketSpec = BucketSpec

@typing.final
class BucketStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BucketStatus._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNSPECIFIED: BucketStatus._State.ValueType  # 0
        CREATING: BucketStatus._State.ValueType  # 1
        """Bucket is under creation and cannot be used yet."""
        ACTIVE: BucketStatus._State.ValueType  # 2
        """Bucket is active and ready for usage."""
        UPDATING: BucketStatus._State.ValueType  # 3
        """Bucket is being updated.
        It can be used, but some settings are being modified and you can observe their inconsistency.
        """
        SCHEDULED_FOR_DELETION: BucketStatus._State.ValueType  # 4
        """Bucket is scheduled for deletion.
        It cannot be used in s3 api anymore.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper): ...
    STATE_UNSPECIFIED: BucketStatus.State.ValueType  # 0
    CREATING: BucketStatus.State.ValueType  # 1
    """Bucket is under creation and cannot be used yet."""
    ACTIVE: BucketStatus.State.ValueType  # 2
    """Bucket is active and ready for usage."""
    UPDATING: BucketStatus.State.ValueType  # 3
    """Bucket is being updated.
    It can be used, but some settings are being modified and you can observe their inconsistency.
    """
    SCHEDULED_FOR_DELETION: BucketStatus.State.ValueType  # 4
    """Bucket is scheduled for deletion.
    It cannot be used in s3 api anymore.
    """

    class _SuspensionState:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _SuspensionStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BucketStatus._SuspensionState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SUSPENSION_STATE_UNSPECIFIED: BucketStatus._SuspensionState.ValueType  # 0
        NOT_SUSPENDED: BucketStatus._SuspensionState.ValueType  # 1
        SUSPENDED: BucketStatus._SuspensionState.ValueType  # 2

    class SuspensionState(_SuspensionState, metaclass=_SuspensionStateEnumTypeWrapper): ...
    SUSPENSION_STATE_UNSPECIFIED: BucketStatus.SuspensionState.ValueType  # 0
    NOT_SUSPENDED: BucketStatus.SuspensionState.ValueType  # 1
    SUSPENDED: BucketStatus.SuspensionState.ValueType  # 2

    COUNTERS_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    SUSPENSION_STATE_FIELD_NUMBER: builtins.int
    DELETED_AT_FIELD_NUMBER: builtins.int
    PURGE_AT_FIELD_NUMBER: builtins.int
    state: global___BucketStatus.State.ValueType
    suspension_state: global___BucketStatus.SuspensionState.ValueType
    @property
    def counters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[nebius.storage.v1.bucket_counters_pb2.BucketCounters]: ...
    @property
    def deleted_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def purge_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        counters: collections.abc.Iterable[nebius.storage.v1.bucket_counters_pb2.BucketCounters] | None = ...,
        state: global___BucketStatus.State.ValueType = ...,
        suspension_state: global___BucketStatus.SuspensionState.ValueType = ...,
        deleted_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        purge_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["deleted_at", b"deleted_at", "purge_at", b"purge_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["counters", b"counters", "deleted_at", b"deleted_at", "purge_at", b"purge_at", "state", b"state", "suspension_state", b"suspension_state"]) -> None: ...

global___BucketStatus = BucketStatus
